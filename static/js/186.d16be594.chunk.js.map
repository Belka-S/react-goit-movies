{"version":3,"file":"static/js/186.d16be594.chunk.js","mappings":"kOAuCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,OAAO,WAAM,wCACX,uGAC6BC,EAAAA,EAAAA,IAAkBH,GAD/C,OACQI,EADR,OAEQC,GAAcC,EAAAA,EAAAA,IAAiBF,EAAaG,SAClDV,EAAWQ,GACXN,EAAaM,EAAYG,OAAS,GAJpC,4CADW,uBAAC,WAAD,wBAOXC,EACD,CACF,GAAE,CAACT,KAEF,8BACIF,GAGA,wBACGF,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGD,EADE,OAHf,sEAaP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'servises/movieApi';\nimport { normalizeReviews } from 'servises/normalize';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isReviews, setIsReviews] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    return () => {\n      async function fetch() {\n        const movieReviews = await fetchMovieReviews(movieId);\n        const normReviews = normalizeReviews(movieReviews.results);\n        setReviews(normReviews);\n        setIsReviews(normReviews.length > 0);\n      }\n      fetch();\n    };\n  }, [movieId]);\n  return (\n    <>\n      {!isReviews ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content }) => (\n            <li key={author}>\n              <h4>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","isReviews","setIsReviews","movieId","useParams","useEffect","fetchMovieReviews","movieReviews","normReviews","normalizeReviews","results","length","fetch","map","author","content"],"sourceRoot":""}